// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = (function() {
    'use strict';
    var ConsoleLogger;
    return ConsoleLogger = (function(_super) {
      __extends(ConsoleLogger, _super);

      function ConsoleLogger(config, _console) {
        var f, fn;
        if (_console == null) {
          _console = console;
        }
        ConsoleLogger.__super__.constructor.apply(this, arguments);
        fn = function(fnname) {
          return (_console[fnname] || _console.log).bind(_console);
        };
        this.outputs = {
          Fatal: f = fn('error'),
          Error: f,
          Warn: fn('warn'),
          Info: fn('info'),
          Debug: f = fn('debug'),
          Trace: f
        };
      }

      ConsoleLogger.prototype.logMessage = function(obj) {
        return this.outputs[obj.level](this.formatLogMessage(obj));
      };

      ConsoleLogger.prototype.toString = function() {
        return 'ConsoleLogger';
      };

      return ConsoleLogger;

    })(require('./AbstractLogger'));
  })();

}).call(this);
