// Generated by CoffeeScript 1.6.3
(function() {
  var TeePseudoLogger;

  module.exports = TeePseudoLogger = (function() {
    'use strict';
    var LogLevels;

    LogLevels = require('../util/LogLevels');

    function TeePseudoLogger(loggers) {
      this.loggers = loggers != null ? loggers : [];
    }

    TeePseudoLogger.prototype.getLevelConfig = function(parts) {
      var extras, logger, lvlcfg, masks, _i, _len, _ref;
      masks = [];
      extras = [];
      _ref = this.loggers;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        logger = _ref[_i];
        lvlcfg = logger.getLevelConfig(parts);
        masks.push(lvlcfg.mask);
        extras.push(lvlcfg);
      }
      return {
        mask: LogLevels.combine.apply(LogLevels, masks),
        extra: extras
      };
    };

    TeePseudoLogger.prototype.logMessage = function(obj) {
      var X, extra, i, k, loggers, myobj, numLevel, v, _i, _ref;
      loggers = this.loggers;
      numLevel = obj.numLevel, extra = obj.extra;
      myobj = {};
      for (k in obj) {
        v = obj[k];
        myobj[k] = v;
      }
      for (i = _i = 0, _ref = loggers.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        X = extra[i];
        if (LogLevels.isset(X.mask, numLevel)) {
          myobj.extra = X.extra;
          loggers[i].logMessage(myobj);
        }
      }
    };

    TeePseudoLogger.prototype.toString = function() {
      return "TeePseudoLogger[" + (this.loggers.join(', ')) + "]";
    };

    return TeePseudoLogger;

  })();

}).call(this);
